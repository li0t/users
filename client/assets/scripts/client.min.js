!function(a){"use strict";a.module("App",["ngRoute","angularFileUpload","Session"])}(angular),function(a){"use strict";var b;a.module("Session",[]).factory("$session",["$rootScope","$timeout",function(a,c){return a.session={},{login:function(b){a.session.user=b},logout:function(){delete a.session.user},flash:function(d,e){c.cancel(b),e?(a.session.flash={message:e,type:d},b=c(function(){delete a.session.flash},5e3)):delete a.session.flash},user:function(b){return a.session.user[b]},get:function(b){return a.session[b]},set:function(b,c){a.session[b]=c},"delete":function(b){delete a.session[b]}}}])}(angular),function(a){"use strict";a.module("App").factory("$io",function(){return{connect:function(a,b){return window.io(a,b)}}})}(angular),function(a){"use strict";a.module("App").factory("$statics",["$http","$q",function(a,b){return{get:function(c){var d=b.defer(),e={},f="";if(!c)throw new TypeError("Parameter cannot be null!");if(!angular.isArray(c)&&!angular.isString(c))throw new TypeError("Wrong parameter type! Must be a String or an Array.");return e.params={statics:c},a.get("/api/statics"+f,e).success(function(a){d.resolve(a)}).error(function(a,b){d.reject(a,b)}),d.promise}}}])}(angular),function(a){"use strict";a.module("App").controller("Navbar",["$scope","$location","$http","$session",function(a,b,c,d){a.signout=function(){c.get("/api/users/signout").success(function(){d.flash("success","See you soon "+d.user("name")+"!"),d.logout(),b.path("/")}).error(function(){d.flash("danger","Logout failed!")})}}])}(angular),function(a){"use strict";a.module("App").controller("Pages:Dashboard",["$scope","$http","$location","$session",function(a,b,c,d){}])}(angular),function(a){"use strict";a.module("App").controller("Pages:Help",["$scope","$window",function(a,b){a.back=function(){b.history.back()}}])}(angular),function(a){"use strict";a.module("App").controller("Users:Recover",["$scope","$http","$location","$session",function(a,b,c,d){a.submitting=!1,a.submit=function(){a.submitting=!0,b.post("/api/users/recover",{email:a.form.email}).success(function(){c.path("/"),d.flash("success","Please check your email inbox. Dont forget to check the SPAM folder just in case.")}).error(function(){d.flash("danger","Invalid Email! ... or something...")})["finally"](function(){a.submitting=!1})}}])}(angular),function(a){"use strict";a.module("App").controller("Users:SignIn",["$scope","$http","$location","$session",function(a,b,c,d){a.error=!1,a.submitting=!1,a.submit=function(){a.submitting=!0,d.flash(),b.post("/api/users/signin",{email:a.form.email,password:a.form.password}).success(function(a){d.login(a),c.path("/dashboard"),d.flash("success","Welcome back "+a.name+"!")}).error(function(){d.flash("danger","Wrong email or password")})["finally"](function(){a.submitting=!1})}}])}(angular),function(a){"use strict";a.module("App").controller("Users:SignOut",["$scope","$location","$http","$session",function(a,b,c,d){}])}(angular),function(a){"use strict";a.module("App").controller("Users:SignUp",["$scope","$http","$location","$session","statics",function(a,b,c,d,e){a.submitting=!1,a.statics=e,a.submit=function(){a.submitting=!0,d.flash(),b.post("/api/users",{name:a.form.name,email:a.form.email,gender:a.form.gender._id,password:a.form.password}).success(function(a){d.login(a),c.path("/dashboard"),d.flash("success","Account created! Welcome "+a.name+"!")}).error(function(a,b){409===b?d.flash("warning","That email account is already registered. Do you need to recover your password?"):400===b?d.flash("warning","You entered something invalid."):d.flash("danger","Emmmm... The server doen't seem to like you...")})["finally"](function(){a.submitting=!1})}}])}(angular),function(a){"use strict";a.module("App").config(["$routeProvider",function(a){a.when("/",{templateUrl:"/templates/pages/home.html"}).when("/help",{controller:"Pages:Help",templateUrl:"/templates/pages/help.html"}).when("/dashboard",{controller:"Pages:Dashboard",templateUrl:"/templates/pages/dashboard.html"})}])}(angular),function(a){"use strict";a.module("App").config(["$routeProvider",function(a){a.when("/users/signup",{controller:"Users:SignUp",templateUrl:"/templates/users/signup.html",resolve:{statics:["$statics",function(a){return a.get("genders")}]}}).when("/users/signin",{controller:"Users:SignIn",templateUrl:"/templates/users/signin.html"}).when("/users/signout",{controller:"Users:SignOut"}).when("/users/recover",{controller:"Users:Recover",templateUrl:"/templates/users/recover.html"})}])}(angular),function(a){"use strict";a.module("App").config(["$routeProvider","$locationProvider",function(a,b){a.otherwise({redirectTo:"/notfound"}).when("/notfound",{templateUrl:"/templates/notfound.html"}),b.html5Mode(!0)}]).run(["$rootScope","$location","$session","$http",function(a,b,c,d){d.get("/api/session").success(function(a){c.login(a.user),b.path("/dashboard")}).error(function(){b.path("/")})}])}(angular);