!function(ng) {
    "use strict";
    ng.module("App", [ "ngRoute", "angularFileUpload", "Session", "Formatter" ]);
}(angular), function(ng) {
    "use strict";
    function capitalize(input, all) {
        return ng.isString(input) ? (input = input.toLowerCase(), all ? input.replace(/(?:^|\s)\S/g, function(match) {
            return match.toUpperCase();
        }) : input.charAt(0).toUpperCase() + input.slice(1)) : input;
    }
    function bytes(n, precision) {
        if (isNaN(parseFloat(n)) || !isFinite(n)) return "-";
        precision || (precision = 1);
        var units = [ "bytes", "kB", "MB", "GB", "TB", "PB" ], number = Math.floor(Math.log(n) / Math.log(1024)), size = n / Math.pow(1024, Math.floor(number));
        return size.toFixed(precision) + " " + units[number];
    }
    function format(str) {
        if (!str || arguments.length < 2) return str;
        for (var i = 1; i < arguments.length; i++) {
            var regex = new RegExp("\\{" + (i - 1) + "\\}", "igm");
            str = str.replace(regex, arguments[i]);
        }
        return str;
    }
    var m = ng.module("Formatter", []);
    m.service("$formatter", function() {
        return {
            capitalize: capitalize,
            bytes: bytes
        };
    }), m.filter("capitalize", [ function() {
        return capitalize;
    } ]), m.filter("bytes", [ function() {
        return bytes;
    } ]), m.filter("format", [ function() {
        return format;
    } ]);
}(angular), function(ng) {
    "use strict";
    var timeout;
    ng.module("Session", []).factory("$session", [ "$rootScope", "$timeout", function($rootScope, $timeout) {
        return $rootScope.session = {}, {
            login: function(user) {
                $rootScope.session.user = user;
            },
            logout: function() {
                delete $rootScope.session.user;
            },
            flash: function(type, message) {
                $timeout.cancel(timeout), message ? ($rootScope.session.flash = {
                    message: message,
                    type: type
                }, timeout = $timeout(function() {
                    delete $rootScope.session.flash;
                }, 5e3)) : delete $rootScope.session.flash;
            },
            user: function(field) {
                return $rootScope.session.user[field];
            },
            get: function(key) {
                return $rootScope.session[key];
            },
            set: function(key, value) {
                $rootScope.session[key] = value;
            },
            "delete": function(key) {
                delete $rootScope.session[key];
            }
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").factory("$io", function() {
        return {
            connect: function(namespace, options) {
                return window.io(namespace, options);
            }
        };
    });
}(angular), function(ng) {
    "use strict";
    ng.module("App").factory("$statics", [ "$http", "$q", function($http, $q) {
        return {
            get: function(param) {
                var deferred = $q.defer(), query = {}, name = "";
                if (!param) throw new TypeError("Parameter cannot be null!");
                if (!angular.isArray(param) && !angular.isString(param)) throw new TypeError("Wrong parameter type! Must be a String or an Array.");
                return query.params = {
                    statics: param
                }, $http.get("/api/statics" + name, query).success(function(data) {
                    deferred.resolve(data);
                }).error(function(data, status) {
                    deferred.reject(data, status);
                }), deferred.promise;
            }
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Contacts:Index", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Entries:Create", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Entries:Index", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:Recover", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:Recover", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {
        $scope.fetchingEntries = null, $scope.entries = null, $scope.fetchEntries = function() {
            $scope.fetchingEntries = !0, $http.get("/api/entries/group/" + $routeParams.id).success(function(data) {
                $scope.entries = data;
            })["finally"](function() {
                $scope.fetchingEntries = !1;
            });
        }, $scope.fetchEntries();
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Groups:Index", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {
        $scope.groups = null, $scope.fetching = !1, $scope.loadGroups = function() {
            $scope.fetching = !0, $http.get("/api/groups/me").success(function(groups) {
                $scope.groups = groups;
            })["finally"](function() {
                $scope.fetching = !1;
            });
        }, $scope.loadGroups();
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Group:Members:Add", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Group:Members:Index", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {
        $scope.fetchingMembers = null, $scope.members = null, $scope.fetchMembers = function() {
            $scope.fetchingMembers = !0, $http.get("/api/groups/" + $routeParams.id + "/members").success(function(data) {
                $scope.members = data;
            })["finally"](function() {
                $scope.fetchingMembers = !1;
            });
        }, $scope.fetchMembers();
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Group:Members:Remove", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Groups:Profile", [ "$scope", "$http", "$location", "$session", "$routeParams", function($scope, $http, $location, $session, $routeParams) {
        $scope.fetchingGroup = null, $scope.group = null, $scope.fetchGroup = function() {
            $scope.fetchingGroup = !0, $http.get("/api/group/" + $routeParams.id).success(function(data) {
                $scope.group = data, $session.set("group", data);
            })["finally"](function() {
                $scope.fetchingGroup = !1;
            });
        }, $scope.fetchGroup();
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:Recover", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {
        $scope.fetchingTasks = null, $scope.tasks = null, $scope.fetchTasks = function() {
            $scope.fetchingTasks = !0, $http.get("/api/tasks/group/" + $routeParams.id).success(function(data) {
                $scope.tasks = data;
            })["finally"](function() {
                $scope.fetchingTasks = !1;
            });
        }, $scope.fetchTasks();
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Navbar", [ "$scope", "$location", "$http", "$session", function($scope, $location, $http, $session) {
        $scope.signout = function() {
            $http.get("/api/users/signout").success(function() {
                $session.flash("success", "See you soon " + $session.user("email") + "!"), $session.logout(), 
                $location.path("/");
            }).error(function() {
                $session.flash("danger", "Logout failed!");
            });
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Notifications:Index", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Pages:Dashboard", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Pages:Help", [ "$scope", "$window", function($scope, $window) {
        $scope.back = function() {
            $window.history.back();
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Polls:Index", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Search:Index", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Tasks:Close", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Tasks:Collaboratos:Add", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Tasks:Collaboratos:Index", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Tasks:Collaboratos:Remove", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Tasks:Create", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Tasks:Index", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:Profile", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {} ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:Recover", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {
        $scope.submitting = !1, $scope.submit = function() {
            $scope.submitting = !0, $http.post("/api/users/recover", {
                email: $scope.form.email
            }).success(function() {
                $location.path("/"), $session.flash("success", "Please check your email inbox. Dont forget to check the SPAM folder just in case.");
            }).error(function() {
                $session.flash("danger", "Invalid Email! ... or something...");
            })["finally"](function() {
                $scope.submitting = !1;
            });
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:Reset", [ "$scope", "$http", "$location", "$routeParams", "$session", function($scope, $http, $location, $routeParams, $session) {
        $scope.submitting = !1, $scope.validating = !0, $scope.submit = function() {
            $scope.submitting = !0, $http.post("/api/users/reset/" + $routeParams.token, {
                password: $scope.form.password
            }).success(function() {
                $session.flash("Tu clave ha sido cambiada. Por favor inicia sesión con tu nueva clave."), 
                $location.path("/");
            }).error(function() {
                $session.flash("No se ha podido reestablecer tu clave. Tal vez debas realizar una nueva solicitud de cambio.");
            })["finally"](function() {
                $scope.submitting = !1;
            });
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:Signin", [ "$scope", "$http", "$location", "$session", function($scope, $http, $location, $session) {
        $scope.error = !1, $scope.submitting = !1, $scope.submit = function() {
            $scope.submitting = !0, $session.flash(), $http.post("/api/users/signin", {
                email: $scope.form.email,
                password: $scope.form.password
            }).success(function(user) {
                $session.login(user), $location.path("/users/" + user._id + "/profile"), $session.flash("success", "Welcome back " + user.email + "!");
            }).error(function() {
                $session.flash("danger", "Wrong email or password");
            })["finally"](function() {
                $scope.submitting = !1;
            });
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").controller("Users:Signup", [ "$scope", "$http", "$location", "$session", "statics", function($scope, $http, $location, $session, statics) {
        $scope.submitting = !1, $scope.statics = statics, $scope.submit = function() {
            $scope.submitting = !0, $session.flash(), $http.post("/api/users", {
                name: $scope.form.name,
                email: $scope.form.email,
                gender: $scope.form.gender._id,
                password: $scope.form.password
            }).success(function(user) {
                $session.login(user), $location.path("/dashboard"), $session.flash("success", "Account created! Welcome " + user.name + "!");
            }).error(function(data, status) {
                409 === status ? $session.flash("warning", "That email account is already registered. Do you need to recover your password?") : 400 === status ? $session.flash("warning", "You entered something invalid.") : $session.flash("danger", "Emmmm... The server doen't seem to like you...");
            })["finally"](function() {
                $scope.submitting = !1;
            });
        };
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").config([ "$routeProvider", function($routeProvider) {
        $routeProvider.when("/contacts", {
            controller: "Contacts:Index",
            templateUrl: "/templates/contacts/index.html"
        });
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").config([ "$routeProvider", function($routeProvider) {
        $routeProvider.when("/entries", {
            controller: "Entries:Index",
            templateUrl: "/templates/entries/index.html"
        }).when("/entries/create", {
            controller: "Entries:Create",
            templateUrl: "/templates/entries/create.html"
        });
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").config([ "$routeProvider", function($routeProvider) {
        $routeProvider.when("/groups", {
            controller: "Groups:Index",
            templateUrl: "/templates/groups/index.html"
        }).when("/groups/create", {
            controller: "Groups:Create",
            templateUrl: "/templates/groups/create.html"
        }).when("/groups/:id/members", {
            controller: "Groups:Members:Index",
            templateUrl: "/templates/groups/members/index.html"
        }).when("/groups/:id/members/add/:user", {
            controller: "Groups:Members:Add",
            templateUrl: "/templates/groups/members/add.html"
        }).when("/groups/:id/members/remove/:user", {
            controller: "Groups:Members:Remove",
            templateUrl: "/templates/groups/members/remove.html"
        }).when("/groups/:id/profile", {
            controller: "Groups:Profile",
            templateUrl: "/templates/groups/profile.html"
        });
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").config([ "$routeProvider", function($routeProvider) {
        $routeProvider.when("/", {
            templateUrl: "/templates/pages/home.html"
        }).when("/help", {
            controller: "Pages:Help",
            templateUrl: "/templates/pages/help.html"
        }).when("/dashboard", {
            controller: "Pages:Dashboard",
            templateUrl: "/templates/pages/dashboard.html"
        });
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").config([ "$routeProvider", function($routeProvider) {
        $routeProvider.when("/search", {
            controller: "Search:Index",
            templateUrl: "/templates/search/index.html"
        });
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").config([ "$routeProvider", function($routeProvider) {
        $routeProvider.when("/tasks", {
            controller: "Task:Index",
            templateUrl: "/templates/tasks/index.html"
        }).when("/tasks/create", {
            controller: "Task:Create",
            templateUrl: "/templates/tasks/create.html"
        }).when("/tasks/:id/close", {
            controller: "Task:Close",
            templateUrl: "/templates/tasks/close.html"
        });
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").config([ "$routeProvider", function($routeProvider) {
        $routeProvider.when("/users/signin", {
            controller: "Users:Signin",
            templateUrl: "/templates/users/signin.html"
        }).when("/users/signup", {
            controller: "Users:Signup",
            templateUrl: "/templates/users/signup.html",
            resolve: {
                statics: [ "$statics", function($statics) {
                    return $statics.get("genders");
                } ]
            }
        }).when("/users/recover", {
            controller: "Users:Recover",
            templateUrl: "/templates/users/recover.html"
        }).when("/users/:id/profile", {
            controller: "Users:Profile",
            templateUrl: "/templates/users/profile.html"
        }).when("/users/reset/:token", {
            controller: "Users:Reset",
            templateUrl: "/templates/users/reset.html"
        });
    } ]);
}(angular), function(ng) {
    "use strict";
    ng.module("App").config([ "$routeProvider", "$locationProvider", function($routeProvider, $locationProvider) {
        $routeProvider.otherwise({
            redirectTo: "/notfound"
        }).when("/notfound", {
            templateUrl: "/templates/notfound.html"
        }), $locationProvider.html5Mode(!0);
    } ]).run([ "$rootScope", "$location", "$session", "$http", function($rootScope, $location, $session, $http) {
        $http.get("/api/session").success(function(data) {
            $session.login(data.user), $location.path("/dashboard");
        }).error(function() {
            $location.path("/");
        });
    } ]);
}(angular);